"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.wrapIncrementalDeclarations=void 0;const incremental_task_js_1=require("../external/task/incremental-task.js"),file_set_js_1=require("../internal/snapshot/util/file-set.js"),time_util_js_1=require("../util/time-util.js"),strategies_js_1=require("./strategies.js"),util_js_1=require("./util.js"),collectDecoratorDecorations=e=>{const t=[e],r=new Set,n={inputs:new Map,inputFiles:new file_set_js_1.FileSet,outputFiles:new file_set_js_1.FileSet};for(;t.length;){const s=t.shift(),a=(0,util_js_1.getSelfDeclaratorContainer)(s);null==a||a.forEach((t=>{const{propertyKey:s,declaratorType:a,options:i}=t;if(r.has(s))return;r.add(s);const l=e[s];try{strategies_js_1.Strategies[a](s,l,n,i)}catch{util_js_1.incrementalDeclaratorLogger.warn(`Error occurred while setting '${a}' by '${s}' in task '${e.getPath()}', will treat it as normal property.`)}}));const i=Object.getPrototypeOf(s);i&&i instanceof incremental_task_js_1.IncrementalTask&&t.push(i)}return n},wrapDeclareInputs=(e,t)=>{if(!t.size)return;const r=e.declareInputs.bind(e);e.declareInputs=function(){const e=r();for(const[r,n]of t)e.set(r,n);return e}},concatFileSet=(e,t)=>{for(const[r,n]of t.collect())e.addEntry(r,n);return e},wrapDeclareInputFiles=(e,t)=>{if(!t.collect().size)return;const r=e.declareInputFiles.bind(e);e.declareInputFiles=function(){return concatFileSet(r(),t)}},wrapDeclareOutputFiles=(e,t)=>{if(!t.collect().size)return;const r=e.declareOutputFiles.bind(e);e.declareOutputFiles=function(){return concatFileSet(r(),t)}},wrapIncrementalDeclarations=e=>{if(!(e instanceof incremental_task_js_1.IncrementalTask&&(0,util_js_1.hasIncrementalDecorator)(e)))return;const t=process.hrtime(),{inputs:r,inputFiles:n,outputFiles:s}=collectDecoratorDecorations(e);wrapDeclareInputs(e,r),wrapDeclareInputFiles(e,n),wrapDeclareOutputFiles(e,s);const a=process.hrtime(t),i=(0,time_util_js_1.formatTime)(a);util_js_1.incrementalDeclaratorLogger.debug(`Task '${e.getPath()}' cost while wrapping incremental declarations: ${i}`)};exports.wrapIncrementalDeclarations=wrapIncrementalDeclarations;