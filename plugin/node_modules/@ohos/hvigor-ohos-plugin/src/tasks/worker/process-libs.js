"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var l=Object.getOwnPropertyDescriptor(t,i);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,l)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.processLibs=exports.applyForSelectionRule=exports.filterBySelection=exports.buildLibs=void 0;const crypto_1=require("crypto"),fs_1=require("fs"),path_1=__importDefault(require("path")),stream_1=require("stream"),hvigor_1=require("@ohos/hvigor"),fs=__importStar(require("fs-extra")),minimatch=__importStar(require("minimatch")),file_util_js_1=require("../../utils/file-util.js"),log_adaptor_js_1=require("../../utils/log/log-adaptor.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),logger=ohos_logger_js_1.OhosLogger.getLogger("NativeStrip"),buildLibs=(e,t,i)=>e.map((e=>({name:path_1.default.basename(e),path:path_1.default.resolve(i,e),relativePath:e,pkgName:t.getPackageName(),pkgVersion:t.getDependencyVersion(),isLocal:t.isLocal(),selected:0}))).filter((e=>fs.lstatSync(e.path).isFile()));exports.buildLibs=buildLibs;const filterBySelection=(e,t)=>(0===t.length||t.forEach((t=>(0,exports.applyForSelectionRule)(e,t))),e);exports.filterBySelection=filterBySelection;const applyForSelectionRule=(e,t)=>{var i,r;const l=e.filter((e=>e.pkgName===t.package)).filter((e=>!t.version||e.pkgVersion===t.version)),o=l.filter((e=>t.include.includes(e.name)));let a;o.forEach((e=>e.selected=1)),o.length>0&&(a=o.map((e=>e.name)).join(", "),logger.debug(`Selection rule :${t.package}:${null!==(i=t.version)&&void 0!==i?i:""}:include hit for ${a}`));const s=l.filter((e=>{var i;return null===(i=t.exclude)||void 0===i?void 0:i.includes(e.name)}));s.forEach((e=>e.selected=2)),s.length>0&&(a=s.map((e=>e.name)).join(", "),logger.debug(`Selection rule:${t.package}:${null!==(r=t.version)&&void 0!==r?r:""}:exclude hit for ${a}`))};async function processLibs(e){var t,i;const r=[...e.allHarLibs.reverse(),...e.outputLibs,...e.cangjieLibs,...e.localLibs];(0,exports.filterBySelection)(r,null!==(i=null===(t=e.filterRule)||void 0===t?void 0:t.select)&&void 0!==i?i:[]);const{excludes:l,pickFirsts:o,pickLasts:a,enableOverride:s}={excludes:[],pickFirsts:[],pickLasts:[],enableOverride:!1,...e.filterRule};fs.emptyDirSync(e.outputDir);const n=new Map,c=[];r.forEach((e=>{if(2!==e.selected&&!c.includes(e.relativePath)){if(1===e.selected)return n.set(e.relativePath,[e.path]),void c.push(e.relativePath);if(l.some((t=>minimatch.default(e.relativePath,t))))logger.debug(`The filter condition excludes matched ${e.path}.`);else{if(!a.some((t=>minimatch.default(e.relativePath,t)))||!n.has(e.relativePath))return o.some((t=>minimatch.default(e.relativePath,t)))||s?(n.set(e.relativePath,[e.path]),void logger.debug(`The filter condition pickFirsts or enableOverride matched ${e.path}.`)):void(n.has(e.relativePath)?n.get(e.relativePath).push(e.path):n.set(e.relativePath,[e.path]));logger.debug(`The filter condition pickLasts matched ${e.path}.`)}}})),await checkDuplicatedNativeLibs(n,e.profilePath,e.moduleName);for(const[t,i]of n)await file_util_js_1.FileUtil.linkFile(i.pop(),path_1.default.resolve(e.outputDir,t))}async function checkDuplicatedNativeLibs(e,t,i){const r=[];for(const t of e.keys()){const i=e.get(t),l=path_1.default.basename(t);if(i&&i.length>1&&"libc++.so"!==l&&"libc++_shared.so"!==l){const e=await removeDuplicateFiles(i);if(e.length<2)continue;r.push(...e)}}if(r.length){const e=r.reduce(((e,t)=>`${e}- ${t}\n`),"");logger.printErrorExit(new log_adaptor_js_1.OhosLogAdaptor("HE10307",hvigor_1.globalData.buildId).formatMessage(i,e.trimEnd()).getLogMessage())}}async function removeDuplicateFiles(e){if(e.length<2)return e;const t=[];for(const i of e)await collectUniqueFile(i,t);return t.map((e=>e.file))}async function collectUniqueFile(e,t){var i;const r=fs.lstatSync(e),l=r.isSymbolicLink()?await fs.readlink(e):e;if(0!==t.length)for(const o of t){const a=`${e} | ${o.file}`;if(!fs.existsSync(l)){logger.debug(`Invalid file or symlink '${e}'.`);continue}if(l===o.file){logger.debug(`SymbolicLink relation between ${a}.`);continue}if(r.size!==o.stats.size){logger.debug(`Different file size for ${a}.`),t.push({file:l,stats:r});continue}const s=await computeFileHash(l);o.hash=null!==(i=o.hash)&&void 0!==i?i:await computeFileHash(o.file),s===o.hash?logger.debug(`Same checksum for ${a}.`):(logger.debug(`Different checksum for ${a}.`),t.push({file:l,stats:r,hash:s}))}else t.push({file:l,stats:r})}async function computeFileHash(e){const t=(0,crypto_1.createHash)("MD5");return new Promise((i=>(0,stream_1.pipeline)((0,fs_1.createReadStream)(e),t,(()=>i(t.digest("hex"))))))}exports.applyForSelectionRule=applyForSelectionRule,exports.processLibs=processLibs;