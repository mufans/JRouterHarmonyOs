"use strict";var __importDefault=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CommonSignCommandBuilder=void 0;const fs_1=__importDefault(require("fs")),path_1=__importDefault(require("path")),build_option_path_info_js_1=require("../../../common/build-option-path-info.js"),error_code_map_js_1=require("../../../error/error-code-map.js"),decipher_util_js_1=require("../../../utils/decipher-util.js"),ohos_logger_js_1=require("../../../utils/log/ohos-logger.js"),sdk_version_js_1=require("../../../version/sdk-version.js");class CommonSignCommandBuilder{constructor(i,e,t,o,r){this._log=ohos_logger_js_1.OhosLogger.getLogger(CommonSignCommandBuilder.name),this._keyStorePwd="",this._keyPwd="",this._projectModel=i,this._signingConfig=e,this._sdkInfo=t,this._signModel=o,this._signingOptions=r;const s=this._sdkInfo.getToolchainsComponentVersion();void 0!==s&&(this._toolchainsComponentVersion=new sdk_version_js_1.SdkVersion(s))}getSignCommand(){const i=this._signingConfig.material;return this.checkValidMaterial(i),this.initCommandParams(i),this._signingOptions.addCalledJarFile(this.getSignTool()),this._signingOptions.build()}getKeyStorePwd(){return this._keyStorePwd=decipher_util_js_1.DecipherUtil.decryptPwd(path_1.default.resolve(this._signingConfig.material.storeFile,".."),this._signingConfig.material.storePassword),this._keyStorePwd}readKeyStorePwd(){return this._keyStorePwd}getKeyPwd(){return this._keyPwd=decipher_util_js_1.DecipherUtil.decryptPwd(path_1.default.resolve(this._signingConfig.material.storeFile,".."),this._signingConfig.material.keyPassword),this._keyPwd}readKeyPwd(){return this._keyPwd}checkValidMaterial(i){const e="Please check signingConfigs in root project file";void 0===i&&this._log._buildError("The material has not been configured in signingConfigs.")._solution(e)._file(this._projectModel.getProfilePath())._errorCode(error_code_map_js_1.ECM.DECE.SERVICE_LOGIC)._printErrorAndExit(this._projectModel.getName()),this.validateMaterial(i.storeFile,e,"storeFile"),this.validateMaterial(i.profile,e,"profile"),this.validateMaterial(i.certpath,e,"certpath"),i.storeFile=this.normalizePath(i.storeFile),i.profile=this.normalizePath(i.profile),i.certpath=this.normalizePath(i.certpath)}normalizePath(i){return path_1.default.isAbsolute(i)?i:path_1.default.resolve(this._projectModel.getProjectDir(),i)}validateMaterial(i,e,t){if(void 0!==i&&fs_1.default.existsSync(this.normalizePath(i)))return;const o=`Invalid ${t} value. Make sure it is not null or empty. The file must be included in '${i}'.`;this._log._buildError(o)._solution(e)._file(build_option_path_info_js_1.buildOptionPath.getSignConfigPath(this._projectModel,t))._errorCode(error_code_map_js_1.ECM.DECE.SERVICE_LOGIC)._printErrorAndExit(this._projectModel.getName())}validateSignType(i){void 0===this._signingConfig.type&&(this._signingConfig.type="OpenHarmony"),this._signingConfig.type!==i&&this._log._buildError(`Signing configuration '${this._signingConfig.name}' does not apply to '${i}'. The HAP installation may fail.`)._solution("Ensure Signing configuration are consistent in build-profile.json5")._file(this._projectModel.getProfilePath())._errorCode(error_code_map_js_1.ECM.DECE.SERVICE_LOGIC)._printErrorAndExit(this._projectModel.getName())}}exports.CommonSignCommandBuilder=CommonSignCommandBuilder;